// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameImGroupMember = "im_group_members"

// ImGroupMember mapped from table <im_group_members>
type ImGroupMember struct {
	GroupID            string    `gorm:"column:group_id;type:varchar(64);primaryKey;comment:群组ID" json:"group_id"`
	UserID             string    `gorm:"column:user_id;type:varchar(64);primaryKey;comment:用户ID" json:"user_id"`
	RoleLevel          int32     `gorm:"column:role_level;type:int(11);default:3;comment:成员级别，1-群主，2-群管理员，3-群成员" json:"role_level"`
	JoinTime           time.Time `gorm:"column:join_time;type:datetime(3);comment:入群时间" json:"join_time"`
	OperatorUserID     string    `gorm:"column:operator_user_id;type:varchar(64);comment:操作者的用户ID" json:"operator_user_id"`
	Status             int32     `gorm:"column:status;type:int(11);default:1;comment:1- 正常，2 - 禁言" json:"status"`
	NotificationStatus int32     `gorm:"column:notification_status;type:int(11);default:1;comment:群公告状态，1未读，2已读" json:"notification_status"`
	GroupName          string    `gorm:"column:group_name;type:varchar(255);comment:在群群昵称" json:"group_name"`
	MemberType         int32     `gorm:"column:member_type;type:tinyint(4);default:1;comment:用户类型，1-真实用户，2-虚拟用户" json:"member_type"`
}

// TableName ImGroupMember's table name
func (*ImGroupMember) TableName() string {
	return TableNameImGroupMember
}
