// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameImGroup = "im_groups"

// ImGroup mapped from table <im_groups>
type ImGroup struct {
	GroupID        string    `gorm:"column:group_id;type:varchar(64);primaryKey;comment:群ID" json:"group_id"`
	Name           string    `gorm:"column:name;type:varchar(255);comment:群名称" json:"name"`
	Notification   string    `gorm:"column:notification;type:text;comment:群通知" json:"notification"`
	Introduction   string    `gorm:"column:introduction;type:varchar(255);comment:群简介" json:"introduction"`
	FaceURL        string    `gorm:"column:face_url;type:varchar(255);comment:群头像" json:"face_url"`
	CreateTime     time.Time `gorm:"column:create_time;type:datetime;comment:创建时间" json:"create_time"`
	BanReason      string    `gorm:"column:ban_reason;type:varchar(1024);comment:封禁理由" json:"ban_reason"`
	BanTime        time.Time `gorm:"column:ban_time;type:datetime;comment:封禁时间" json:"ban_time"`
	Ex             string    `gorm:"column:ex;type:longtext" json:"ex"`
	Status         int32     `gorm:"column:status;type:int(11);default:1;comment:状态 1-正常，2-群禁言，3-群封禁" json:"status"`
	GroupType      int32     `gorm:"column:group_type;type:int(11);comment:群类型" json:"group_type"`
	GroupLeaderID  string    `gorm:"column:group_leader_id;type:varchar(255);comment:群主id" json:"group_leader_id"`
	WelcomeMessage string    `gorm:"column:welcome_message;type:varchar(1024);comment:欢迎语" json:"welcome_message"`
	RobotNum       int32     `gorm:"column:robot_num;type:int(10);comment:虚拟成员数量" json:"robot_num"`
	AddFriend      int32     `gorm:"column:add_friend;type:tinyint(4);default:1;comment:是否允许群成员互加好友 1-正常，2-禁止" json:"add_friend"`
}

// TableName ImGroup's table name
func (*ImGroup) TableName() string {
	return TableNameImGroup
}
